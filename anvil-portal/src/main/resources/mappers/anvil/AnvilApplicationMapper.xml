<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.godman.anvil.dao.AnvilApplicationDao">

	<select id="findByPaging" parameterType="Map" resultType="AnvilApplication">
		SELECT
		a.id,
		a.application_code,
		a.application_name,
		a.description,
		a.person_in_charge as chargePersonId,
		(SELECT real_name FROM anvil_user WHERE id=a.person_in_charge) as chargePersonName,
		a.should_reviewed,
		a.create_time,
		a.update_time 
		FROM anvil_application a 
		<if test="applicationName!='' and applicationName != null">
		where a.application_name like '%${applicationName}%' 
		</if>
		limit #{pageStart},#{pageSize}
	</select>
	
	<select id="findAll" parameterType="Map" resultType="AnvilApplication">
		SELECT
		a.id,
		a.application_name
		FROM anvil_application a 
	</select>
	
	<select id="getSize" parameterType="Map" resultType="Integer">
		SELECT
		count(1)
		FROM anvil_application a
	</select>
	
	<select id="findApplicationDeassign" parameterType="Map" resultType="AnvilApplication">
		SELECT 
		    id, application_name
		FROM
		    anvil_application a
		WHERE
			<if test="applicationName!='' and applicationName != null">
				application_name like '%${applicationName}%' and 
			</if>
		    id NOT IN (SELECT 
		            application_id
		        FROM
		            anvil_application_assign
		        WHERE
		            user_id = #{userId})
	</select>
	
	<select id="findApplicationAssign" parameterType="Map" resultType="AnvilApplication">
		SELECT 
		    id, application_name
		FROM
		    anvil_application a
		WHERE
			<if test="applicationName!='' and applicationName != null">
				application_name like '%${applicationName}%' and 
			</if>
		    id IN (SELECT 
		            application_id
		        FROM
		            anvil_application_assign
		        WHERE
		            user_id = #{userId})
	</select>
	
	<insert id="addApplication" parameterType="AnvilApplication">
		INSERT INTO anvil_application
		(application_code,
		application_name,
		description,
		person_in_charge,
		should_reviewed,
		create_time,
		update_time
		)
		VALUES
		(#{applicationCode},
		#{applicationName},
		#{description},
		#{personInCharge},
		#{shouldReviewed},
		now(),
		now()
		)
	</insert>
	
	<insert id="addApplicationAssign" parameterType="AnvilCategoryAssign">
		INSERT INTO anvil_application_assign
		(user_id,
		application_id
		)
		VALUES
		(#{userId},
		#{applicationId}
		)
		ON DUPLICATE KEY UPDATE 
		user_id=#{userId},
		application_id=#{applicationId}
	</insert>
	
	<update id="updateApplication" parameterType="AnvilApplication">
		UPDATE  anvil_application SET
		application_name=#{applicationName},
		description=#{description},
		person_in_charge=#{personInCharge},
		update_time=now() 
		WHERE id=#{id}
	</update>
	
	<delete id="deleteApplication" parameterType="Map">
		DELETE FROM anvil_application 
		WHERE id=#{applicationId}
	</delete>

	<delete id="deleteApplicationAssign" parameterType="Map">
		DELETE FROM anvil_application_assign
		WHERE user_id=#{userId} and application_id=#{applicationId}
	</delete>
</mapper>