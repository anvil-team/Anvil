{"version":3,"sources":["webpack:///./src/components/UI/SearchBox/search-box.scss","webpack:///./src/components/UI/SearchBox/index.jsx","webpack:///./src/layouts/BlankContent.jsx","webpack:///./src/routes/permission/role/RoleTableForm.jsx","webpack:///./src/routes/permission/role/PermissionManage.jsx"],"names":["module","exports","box","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_search_box_scss__WEBPACK_IMPORTED_MODULE_1__","_search_box_scss__WEBPACK_IMPORTED_MODULE_1___default","SearchBox","props","a","createElement","className","styles","children","d","__webpack_exports__","BlankContent","_layouts_scss__WEBPACK_IMPORTED_MODULE_1__","_layouts_scss__WEBPACK_IMPORTED_MODULE_1___default","TableForm","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","key","e","preventDefault","newData","state","data","map","item","_objectSpread","target","getRowByKey","editable","cacheOriginData","setState","push","id","concat","index","roleCode","roleName","roleDesc","isNew","title","width","dataIndex","render","text","record","react_default","input","value","autoFocus","onChange","handleFieldChange","onKeyPress","handleKeyPress","placeholder","loading","onClick","handleSaveRow","divider","type","popconfirm","onConfirm","handleRemove","handleCancel","toggleEditable","handleToDistributionProject","dispatch","payload","distributionVis","userNow","PureComponent","nextProps","preState","isEqual_default","filter","row","_this2","isDel","_this3","fieldName","_this4","_this5","persist","setTimeout","clickedCancel","message","error","focus","_this6","Object","assign","_this$state","react","table","rowKey","columns","getColumns","dataSource","pagination","size","es_button","style","marginTop","marginBottom","handleAddRole","icon","connect","userState","PermissionManage","rowData","PermissionManage_objectSpread","_this$props","roleQuery","permissionState","field","PermissionManage_defineProperty","React","Component","roleList","roleListLoading","Fragment","marginRight","handleSearchChange","onPressEnter","handleSearch","spin","spinning","RoleTableForm","handleChange","es_form","create"],"mappings":"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","file":"static/js/13.c7c9d133.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"anvil-search-box__box___16M9-\"};","import React from 'react';\nimport styles from './search-box.scss';\n\nconst SearchBox = (props) => {\n  return <div className={styles.box}>{props.children}</div>;\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport styles from './layouts.scss';\n\nexport default function BlankContent(props) {\n  return <div className={styles['blank-content']}>{props.children}</div>;\n}\n","import React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Button, Input, message, Popconfirm, Divider } from 'antd';\nimport { isEqual } from 'lodash';\n\nclass TableForm extends PureComponent {\n  index = 0;\n\n  cacheOriginData = {};\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: props.value,\n      loading: false,\n      /* eslint-disable-next-line react/no-unused-state */\n      value: props.value,\n    };\n  }\n\n  static defaultProps = { onChange() {} };\n\n  static getDerivedStateFromProps(nextProps, preState) {\n    if (isEqual(nextProps.value, preState.value)) {\n      return null;\n    }\n    return {\n      data: nextProps.value,\n      value: nextProps.value,\n    };\n  }\n\n  getRowByKey(key, newData) {\n    const { data } = this.state;\n    return (newData || data).filter((item) => item.id === key)[0];\n  }\n\n  toggleEditable = (key) => {\n    return (e) => {\n      e.preventDefault();\n      const { data } = this.state;\n      const newData = data.map((item) => ({ ...item }));\n      const target = this.getRowByKey(key, newData);\n      if (target) {\n        // 进入编辑状态时保存原始数据\n        if (!target.editable) {\n          this.cacheOriginData[key] = { ...target };\n        }\n        target.editable = !target.editable;\n        this.setState({ data: newData });\n      }\n    };\n  };\n\n  handleAddRole = () => {\n    const { data } = this.state;\n    const newData = data.map((item) => ({ ...item }));\n    newData.push({\n      id: `NEW_TEMP_ID_${this.index}`,\n      roleCode: '',\n      roleName: '',\n      roleDesc: '',\n      editable: true,\n      isNew: true,\n    });\n    this.index += 1;\n    this.setState({ data: newData });\n  };\n\n  handleRemove(row) {\n    return () => {\n      const { data } = this.state;\n      const { onChange } = this.props;\n      const newData = data.filter((item) => item.id !== row.id);\n      this.setState({ data: newData });\n      if (!row.isNew) {\n        row.isDel = true;\n        onChange(row);\n      }\n    };\n  }\n\n  handleKeyPress(id) {\n    return (e) => {\n      if (e.key === 'Enter') this.handleSaveRow(e, id);\n    };\n  }\n\n  handleFieldChange(fieldName, key) {\n    return (e) => {\n      const { data } = this.state;\n      const newData = data.map((item) => ({ ...item }));\n      const target = this.getRowByKey(key, newData);\n      if (target) {\n        if (e.target) {\n          target[fieldName] = e.target.value;\n          this.setState({ data: newData });\n        } else {\n          target[fieldName] = e;\n          this.setState({ data: newData });\n        }\n      }\n    };\n  }\n\n  handleSaveRow(key) {\n    return (e) => {\n      e.persist();\n      this.setState({ loading: true });\n\n      setTimeout(() => {\n        if (this.clickedCancel) {\n          this.clickedCancel = false;\n          return;\n        }\n        const target = this.getRowByKey(key) || {};\n        if (!target.roleName || !target.roleCode) {\n          message.error('请填写完整角色信息。');\n          e.target.focus();\n          this.setState({ loading: false });\n          return;\n        }\n        delete target.isNew;\n        delete target.id;\n        this.toggleEditable(e, key);\n\n        const { onChange } = this.props;\n        onChange(target);\n\n        this.setState({ loading: false });\n      }, 500);\n    };\n  }\n\n  handleCancel(key) {\n    return (e) => {\n      this.clickedCancel = true;\n      e.preventDefault();\n      const { data } = this.state;\n      const newData = data.map((item) => ({ ...item }));\n      const target = this.getRowByKey(key, newData);\n      if (this.cacheOriginData[key]) {\n        Object.assign(target, this.cacheOriginData[key]);\n        delete this.cacheOriginData[key];\n      }\n      target.editable = false;\n      this.setState({ data: newData });\n      this.clickedCancel = false;\n    };\n  }\n\n  render() {\n    const { loading, data } = this.state;\n\n    return (\n      <Fragment>\n        <Table\n          rowKey=\"id\"\n          loading={loading}\n          columns={this.getColumns()}\n          dataSource={data}\n          pagination={false}\n          size=\"middle\"\n        />\n        <Button\n          style={{ width: '100%', marginTop: 16, marginBottom: 8 }}\n          type=\"dashed\"\n          onClick={this.handleAddRole}\n          icon=\"plus\"\n        >\n          新增角色\n        </Button>\n      </Fragment>\n    );\n  }\n\n  getColumns = () => {\n    return [\n      {\n        title: '角色代码',\n        width: '35%',\n        dataIndex: 'roleCode',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                autoFocus\n                onChange={this.handleFieldChange('roleCode', record.id)}\n                onKeyPress={this.handleKeyPress(record.id)}\n                placeholder=\"角色代码\"\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '角色名称',\n        width: '20%',\n        dataIndex: 'roleName',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                onChange={this.handleFieldChange('roleName', record.id)}\n                onKeyPress={this.handleKeyPress(record.id)}\n                placeholder=\"角色名称\"\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '角色描述',\n        width: '30%',\n        dataIndex: 'roleDesc',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                onChange={this.handleFieldChange('roleDesc', record.id)}\n                onKeyPress={this.handleKeyPress(record.id)}\n                placeholder=\"角色名称\"\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '操作',\n        key: 'action',\n        render: (text, record) => {\n          const { loading } = this.state;\n          if (!!record.editable && loading) {\n            return null;\n          }\n          if (record.editable) {\n            if (record.isNew) {\n              return (\n                <span>\n                  <a onClick={this.handleSaveRow(record.id)}>添加</a>\n                  <Divider type=\"vertical\" />\n                  <Popconfirm title=\"是否要删除此行？\" onConfirm={this.handleRemove(record)}>\n                    <a>删除</a>\n                  </Popconfirm>\n                </span>\n              );\n            }\n            return (\n              <span>\n                <a onClick={this.handleSaveRow(record.id)}>保存</a>\n                <Divider type=\"vertical\" />\n                <a onClick={this.handleCancel(record.id)}>取消</a>\n              </span>\n            );\n          }\n          return (\n            <span>\n              <a onClick={this.toggleEditable(record.id)}>编辑</a>\n              <Divider type=\"vertical\" />\n              <a onClick={this.handleToDistributionProject(record)}>分配权限</a>\n              <Divider type=\"vertical\" />\n              <Popconfirm title=\"是否要删除此行？\" onConfirm={this.handleRemove(record)}>\n                <a>删除</a>\n              </Popconfirm>\n            </span>\n          );\n        },\n      },\n    ];\n  };\n\n  handleToDistributionProject = (record) => () => {\n    const { dispatch } = this.props;\n    dispatch({ type: 'user/setUserVis', payload: { data: { distributionVis: true } } });\n    dispatch({ type: 'user/setState', payload: { userNow: record } });\n    dispatch({ type: 'user/fetchUserApplicationAssign' });\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  userState: state.userState,\n});\n\nexport default connect(mapStateToProps)(TableForm);\n","/*\n * @Author: zhenglfsir@gmail.com\n * @Date: 2019-01-03 22:08:18\n * @Last Modified by: zhenglfsir@gmail.com\n * @Last Modified time: 2019-04-10 16:24:21\n * 用户管理\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Spin } from 'antd';\nimport BlankContent from 'src/layouts/BlankContent';\nimport SearchBox from 'src/components/UI/SearchBox';\nimport RoleTableForm from './RoleTableForm';\n\nclass PermissionManage extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch({ type: 'permission/fetchRoleList' });\n  }\n\n  render() {\n    const { permissionState } = this.props;\n    const { roleList, roleListLoading } = permissionState;\n\n    return (\n      <>\n        <BlankContent>\n          <SearchBox>\n            <Input\n              style={{ width: 200, marginRight: 10 }}\n              placeholder=\"请输入\"\n              onChange={this.handleSearchChange}\n              onPressEnter={this.handleSearch}\n            />\n            <Button type=\"primary\" onClick={this.handleSearch}>\n              搜索\n            </Button>\n          </SearchBox>\n          <Spin spinning={roleListLoading}>\n            <RoleTableForm value={roleList} pagination={false} onChange={this.handleChange} />\n          </Spin>\n        </BlankContent>\n      </>\n    );\n  }\n\n  handleChange = (row) => {\n    const { dispatch } = this.props;\n    const rowData = { ...row };\n    if (rowData.editable) delete rowData.editable;\n\n    if (row.isDel) {\n      dispatch({ type: 'permission/fetchDelRole', payload: rowData });\n    } else {\n      dispatch({ type: 'permission/fetchEditRole', payload: rowData });\n    }\n  };\n\n  handleSearchChange = (e) => {\n    const { dispatch, permissionState } = this.props;\n\n    dispatch({\n      type: 'permission/setState',\n      payload: { roleQuery: { ...permissionState.roleQuery, roleCode: e.target.value } },\n    });\n  };\n\n  handleSearch = () => {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'permission/fetchRoleList' });\n  };\n\n  handleClose = (field) => () => {\n    const { dispatch } = this.props;\n    dispatch({ type: 'user/setUserVis', payload: { data: { [field]: false } } });\n  };\n}\n\nexport default connect((state) => ({\n  permissionState: state.permissionState,\n}))(Form.create()(PermissionManage));\n"],"sourceRoot":""}