{"version":3,"sources":["webpack:///./src/components/UI/SearchBox/search-box.scss","webpack:///./src/layouts/BlankContent.jsx","webpack:///./src/components/UI/SearchBox/index.jsx","webpack:///./src/routes/permission/components/UserTableForm.jsx","webpack:///./src/routes/permission/UserManage.jsx"],"names":["module","exports","box","BlankContent","props","react_default","a","createElement","className","styles","children","SearchBox","TableForm","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","e","key","preventDefault","newData","state","data","map","item","_objectSpread","target","getRowByKey","editable","cacheOriginData","setState","push","concat","index","realName","username","position","department","roleId","isNew","value","loading","PureComponent","nextProps","preState","isEqual","filter","onChange","saveRow","fieldName","_this2","persist","setTimeout","clickedCancel","message","error","focus","toggleEditable","Object","assign","_this3","columns","title","dataIndex","render","text","record","input","autoFocus","handleFieldChange","onKeyPress","handleKeyPress","placeholder","onClick","divider","type","popconfirm","onConfirm","remove","cancel","_this$state","react","table","rowKey","dataSource","pagination","es_button","style","width","marginTop","marginBottom","newMember","icon","UserManage","form","console","log","dispatch","payload","editVis","React","Component","_this$props","userState","userList","getFieldDecorator","Fragment","UI_SearchBox","es_form","layout","Item","UserTableForm","handleTableFormChange","connect","create"],"mappings":"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","file":"static/js/11.5b81d69c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"anvil-search-box__box___16M9-\"};","import React from 'react';\nimport styles from './layouts.scss';\n\nexport default function BlankContent(props) {\n  return <div className={styles['blank-content']}>{props.children}</div>;\n}\n","import React from 'react';\nimport styles from './search-box.scss';\n\nconst SearchBox = (props) => {\n  return <div className={styles.box}>{props.children}</div>;\n};\n\nexport default SearchBox;\n","import React, { PureComponent, Fragment } from 'react';\nimport { Table, Button, Input, message, Popconfirm, Divider } from 'antd';\nimport isEqual from 'lodash/isEqual';\n\nclass TableForm extends PureComponent {\n  index = 0;\n\n  cacheOriginData = {};\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: props.value,\n      loading: false,\n      /* eslint-disable-next-line react/no-unused-state */\n      value: props.value,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, preState) {\n    if (isEqual(nextProps.value, preState.value)) {\n      return null;\n    }\n    return {\n      data: nextProps.value,\n      value: nextProps.value,\n    };\n  }\n\n  getRowByKey(key, newData) {\n    const { data } = this.state;\n    return (newData || data).filter((item) => item.key === key)[0];\n  }\n\n  toggleEditable = (e, key) => {\n    e.preventDefault();\n    const { data } = this.state;\n    const newData = data.map((item) => ({ ...item }));\n    const target = this.getRowByKey(key, newData);\n    if (target) {\n      // 进入编辑状态时保存原始数据\n      if (!target.editable) {\n        this.cacheOriginData[key] = { ...target };\n      }\n      target.editable = !target.editable;\n      this.setState({ data: newData });\n    }\n  };\n\n  newMember = () => {\n    const { data } = this.state;\n    const newData = data.map((item) => ({ ...item }));\n    newData.push({\n      key: `NEW_TEMP_ID_${this.index}`,\n      realName: '',\n      username: '',\n      position: '',\n      department: '',\n      roleId: '',\n      editable: true,\n      isNew: true,\n    });\n    this.index += 1;\n    this.setState({ data: newData });\n  };\n\n  remove(key) {\n    const { data } = this.state;\n    const { onChange } = this.props;\n    const newData = data.filter((item) => item.key !== key);\n    this.setState({ data: newData });\n    onChange(newData);\n  }\n\n  handleKeyPress(e, key) {\n    if (e.key === 'Enter') {\n      this.saveRow(e, key);\n    }\n  }\n\n  handleFieldChange(e, fieldName, key) {\n    const { data } = this.state;\n    const newData = data.map((item) => ({ ...item }));\n    const target = this.getRowByKey(key, newData);\n    if (target) {\n      target[fieldName] = e.target.value;\n      this.setState({ data: newData });\n    }\n  }\n\n  saveRow(e, key) {\n    e.persist();\n    this.setState({\n      loading: true,\n    });\n    setTimeout(() => {\n      if (this.clickedCancel) {\n        this.clickedCancel = false;\n        return;\n      }\n      const target = this.getRowByKey(key) || {};\n      if (!target.realName || !target.username || !target.roleId) {\n        message.error('请填写完整成员信息。');\n        e.target.focus();\n        this.setState({\n          loading: false,\n        });\n        return;\n      }\n      delete target.isNew;\n      this.toggleEditable(e, key);\n      const { data } = this.state;\n      const { onChange } = this.props;\n      onChange(data);\n      this.setState({\n        loading: false,\n      });\n    }, 500);\n  }\n\n  cancel(e, key) {\n    this.clickedCancel = true;\n    e.preventDefault();\n    const { data } = this.state;\n    const newData = data.map((item) => ({ ...item }));\n    const target = this.getRowByKey(key, newData);\n    if (this.cacheOriginData[key]) {\n      Object.assign(target, this.cacheOriginData[key]);\n      delete this.cacheOriginData[key];\n    }\n    target.editable = false;\n    this.setState({ data: newData });\n    this.clickedCancel = false;\n  }\n\n  render() {\n    const columns = [\n      {\n        title: '姓名',\n        dataIndex: 'realName',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                autoFocus\n                onChange={(e) => this.handleFieldChange(e, 'realName', record.key)}\n                onKeyPress={(e) => this.handleKeyPress(e, record.key)}\n                placeholder=\"成员姓名\"\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '用户名',\n        dataIndex: 'username',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                onChange={(e) => this.handleFieldChange(e, 'username', record.key)}\n                onKeyPress={(e) => this.handleKeyPress(e, record.key)}\n                placeholder=\"工号\"\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '部门信息',\n        dataIndex: 'department',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                onChange={(e) => this.handleFieldChange(e, 'department', record.key)}\n                onKeyPress={(e) => this.handleKeyPress(e, record.key)}\n                placeholder=\"所属部门\"\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '职位',\n        dataIndex: 'position',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                onChange={(e) => this.handleFieldChange(e, 'position', record.key)}\n                onKeyPress={(e) => this.handleKeyPress(e, record.key)}\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '角色名称',\n        dataIndex: 'roleName',\n        render: (text, record) => {\n          if (record.editable) {\n            return (\n              <Input\n                value={text}\n                onChange={(e) => this.handleFieldChange(e, 'roleId', record.key)}\n                onKeyPress={(e) => this.handleKeyPress(e, record.key)}\n              />\n            );\n          }\n          return text;\n        },\n      },\n      {\n        title: '操作',\n        key: 'action',\n        render: (text, record) => {\n          const { loading } = this.state;\n          if (!!record.editable && loading) {\n            return null;\n          }\n          if (record.editable) {\n            if (record.isNew) {\n              return (\n                <span>\n                  <a onClick={(e) => this.saveRow(e, record.key)}>添加</a>\n                  <Divider type=\"vertical\" />\n                  <Popconfirm title=\"是否要删除此行？\" onConfirm={() => this.remove(record.key)}>\n                    <a>删除</a>\n                  </Popconfirm>\n                </span>\n              );\n            }\n            return (\n              <span>\n                <a onClick={(e) => this.saveRow(e, record.key)}>保存</a>\n                <Divider type=\"vertical\" />\n                <a onClick={(e) => this.cancel(e, record.key)}>取消</a>\n              </span>\n            );\n          }\n          return (\n            <span>\n              <a onClick={(e) => this.toggleEditable(e, record.key)}>编辑</a>\n              <Divider type=\"vertical\" />\n              <Popconfirm title=\"是否要删除此行？\" onConfirm={() => this.remove(record.key)}>\n                <a>删除</a>\n              </Popconfirm>\n            </span>\n          );\n        },\n      },\n    ];\n\n    const { loading, data } = this.state;\n\n    return (\n      <Fragment>\n        <Table\n          rowKey=\"id\"\n          loading={loading}\n          columns={columns}\n          dataSource={data}\n          pagination={false}\n        />\n        <Button\n          style={{ width: '100%', marginTop: 16, marginBottom: 8 }}\n          type=\"dashed\"\n          onClick={this.newMember}\n          icon=\"plus\"\n        >\n          新增成员\n        </Button>\n      </Fragment>\n    );\n  }\n}\n\nexport default TableForm;\n","/*\n * @Author: zhenglfsir@gmail.com\n * @Date: 2019-01-03 22:08:18\n * @Last Modified by: zhenglfsir@gmail.com\n * @Last Modified time: 2019-03-04 22:41:48\n * 用户管理\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Divider, Form, Input, Button } from 'antd';\nimport BlankContent from 'src/layouts/BlankContent';\nimport SearchBox from 'src/components/UI/SearchBox';\nimport UserTableForm from './components/UserTableForm';\n\nclass UserManage extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch({ type: 'user/fetchUserList' });\n  }\n\n  render() {\n    const { userState, form } = this.props;\n    const { userList } = userState;\n    const { getFieldDecorator } = form;\n\n    return (\n      <>\n        <BlankContent>\n          <SearchBox>\n            <Form layout=\"inline\">\n              <Form.Item>{getFieldDecorator('keyword')(<Input placeholder=\"请输入\" />)}</Form.Item>\n              <Form.Item>\n                <Button type=\"primary\">搜索</Button>\n              </Form.Item>\n            </Form>\n          </SearchBox>\n          <UserTableForm\n            value={userList}\n            pagination={false}\n            onChange={this.handleTableFormChange}\n          />\n        </BlankContent>\n      </>\n    );\n  }\n\n  handleTableFormChange = (form) => {\n    console.log(form);\n  };\n\n  handleToAddUser = () => {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'user/setState', payload: { editVis: true } });\n  };\n}\n\nexport default connect((state) => ({\n  userState: state.userState,\n}))(Form.create()(UserManage));\n"],"sourceRoot":""}