{"version":3,"sources":["webpack:///./src/routes/login/Login.jsx","webpack:///./src/routes/login/index.scss"],"names":["Login","_this$props","_this","props","dispatch","form","validateFields","errs","values","type","payload","React","Component","getFieldDecorator","this","_this$props$loginStat","loginState","login","tips","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","Fragment","antd_es_form__WEBPACK_IMPORTED_MODULE_5__","className","styles","loginForm","antd_es_spin__WEBPACK_IMPORTED_MODULE_1__","indicator","antd_es_icon__WEBPACK_IMPORTED_MODULE_9__","size","spinning","tip","loginTitle","process","Item","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_7__","prefix","onPressEnter","handleLogin","placeholder","antd_es_button__WEBPACK_IMPORTED_MODULE_3__","loading","loginBtn","onClick","connect","state","create","module","exports","login-version"],"mappings":"6/BAKMA,gVAmDU,WAAM,IAAAC,EACSC,EAAKC,MAAxBC,EADUH,EACVG,SADUH,EACAI,KACbC,eAAe,SAACC,EAAMC,GACpBD,GACHH,EAAS,CAAEK,KAAM,aAAcC,QAASF,4WAvD5BG,IAAMC,kDACf,IACCC,EAAsBC,KAAKX,MAAME,KAAjCQ,kBADDE,EAEiBD,KAAKX,MAAMa,WAA3BC,EAFDF,EAECE,MAAOC,EAFRH,EAEQG,KACf,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAAE,EAAA,GAAMC,UAAWC,IAAOC,WACtBP,EAAAC,EAAAC,cAAAM,EAAA,GAAMC,UAAWT,EAAAC,EAAAC,cAAAQ,EAAA,GAAMpB,KAAK,YAAcqB,KAAK,QAAQC,SAAUd,EAAOe,IAAKd,GAC3EC,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAOQ,YAAvB,kBACkB,IAChBd,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAO,kBAAxB,IAA4CS,UAE9Cf,EAAAC,EAAAC,cAAAE,EAAA,EAAMY,KAAN,KACGtB,EAAkB,WAAY,CAC7BuB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCADpCzB,CAGCM,EAAAC,EAAAC,cAAAkB,EAAA,GACEC,OAAQrB,EAAAC,EAAAC,cAAAQ,EAAA,GAAMpB,KAAK,SACnBgC,aAAc3B,KAAK4B,YACnBC,YAAY,oBAIlBxB,EAAAC,EAAAC,cAAAE,EAAA,EAAMY,KAAN,KACGtB,EAAkB,WAAY,CAC7BuB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCADpCzB,CAGCM,EAAAC,EAAAC,cAAAkB,EAAA,GACE9B,KAAK,WACL+B,OAAQrB,EAAAC,EAAAC,cAAAQ,EAAA,GAAMpB,KAAK,SACnBgC,aAAc3B,KAAK4B,YACnBC,YAAY,oBAIlBxB,EAAAC,EAAAC,cAAAE,EAAA,EAAMY,KAAN,KACEhB,EAAAC,EAAAC,cAAAuB,EAAA,GACEC,QAAS5B,EACTR,KAAK,UACLe,UAAWC,IAAOqB,SAClBC,QAASjC,KAAK4B,aAJhB,kDA2BCM,4BAFS,SAACC,GAAD,MAAY,CAAEjC,WAAYiC,EAAMjC,aAEzCgC,CAAyBzB,EAAA,EAAK2B,QAAL3B,CAAcvB,0BCnEtDmD,EAAAC,QAAA,CAAkB1B,UAAA,iCAAAO,WAAA,kCAAAa,SAAA,gCAAAO,gBAAA","file":"static/js/13.02459800.js","sourcesContent":["import React from 'react';\nimport { Form, Button, Input, Icon, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport styles from './index.scss';\n\nclass Login extends React.Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { login, tips } = this.props.loginState;\n    return (\n      <>\n        <Form className={styles.loginForm}>\n          <Spin indicator={<Icon type=\"loading\" />} size=\"large\" spinning={login} tip={tips}>\n            <div className={styles.loginTitle}>\n              Login For Anvil{' '}\n              <span className={styles['login-version']}>v{process.env.VERSION}</span>\n            </div>\n            <Form.Item>\n              {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'please input your username' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"user\" />}\n                  onPressEnter={this.handleLogin}\n                  placeholder=\"Your username\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('password', {\n                rules: [{ required: true, message: 'please input your password' }],\n              })(\n                <Input\n                  type=\"password\"\n                  prefix={<Icon type=\"lock\" />}\n                  onPressEnter={this.handleLogin}\n                  placeholder=\"Your password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                loading={login}\n                type=\"primary\"\n                className={styles.loginBtn}\n                onClick={this.handleLogin}\n              >\n                Login\n              </Button>\n            </Form.Item>\n          </Spin>\n        </Form>\n      </>\n    );\n  }\n\n  handleLogin = () => {\n    const { dispatch, form } = this.props;\n    form.validateFields((errs, values) => {\n      if (!errs) {\n        dispatch({ type: 'login/auth', payload: values });\n      }\n    });\n  };\n}\n\nconst mapStateToProps = (state) => ({ loginState: state.loginState });\n\nexport default connect(mapStateToProps)(Form.create()(Login));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"anvil-index__loginForm___9TJVQ\",\"loginTitle\":\"anvil-index__loginTitle___3Gtte\",\"loginBtn\":\"anvil-index__loginBtn___1YOGN\",\"login-version\":\"anvil-index__login-version___12_Ws\"};"],"sourceRoot":""}