{"version":3,"sources":["webpack:///./node_modules/antd/es/row/style/index.js","webpack:///./src/components/UI/SearchBox/search-box.scss","webpack:///./src/components/UI/SearchBox/index.jsx","webpack:///./node_modules/antd/es/row/index.js","webpack:///./src/routes/application/cluster/ClusterEditModal.jsx","webpack:///./src/routes/application/cluster/ClusterConfiguration.jsx","webpack:///./src/layouts/BlankContent.jsx","webpack:///./node_modules/antd/es/col/style/index.js","webpack:///./node_modules/antd/es/col/index.js"],"names":["__webpack_require__","module","exports","box","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_search_box_scss__WEBPACK_IMPORTED_MODULE_1__","_search_box_scss__WEBPACK_IMPORTED_MODULE_1___default","SearchBox","props","a","createElement","className","styles","children","_grid__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","formItemLayout","labelCol","span","wrapperCol","ClusterEditModal","dispatch","_this","type","payload","editVis","cluster","_this$props","form","validateFields","err","values","data","React","Component","this","_this$props2","clusterState","applicationState","clusterVis","applicationList","applicationListLoading","getFieldDecorator","react_default","Fragment","modal","visible","onCancel","handleClose","onOk","handleAddCluster","spin","spinning","es_form","Item","_extends","label","initialValue","applicationId","es_select","map","app","Option","key","id","value","applicationName","clusterName","input","description","TextArea","rows","connect","state","create","ClusterConfiguration","title","dataIndex","render","txt","record","onClick","handleToEdit","handleDelete","confirm","concat","_onOk","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","_objectSpread","clusterList","clusterLoading","BlankContent","row","col","placeholder","style","width","onChange","handleChange","onPressEnter","handleSearch","es_button","marginLeft","align","handleToAdd","table","size","dataSource","loading","columns","getColumns","cluster_ClusterEditModal","d","_layouts_scss__WEBPACK_IMPORTED_MODULE_1__","_layouts_scss__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"static/js/9.e4741483.js","sourcesContent":["import '../../style/index.less';\nimport '../../grid/style/index.less';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"anvil-search-box__box___16M9-\"};","import React from 'react';\nimport styles from './search-box.scss';\n\nconst SearchBox = (props) => {\n  return <div className={styles.box}>{props.children}</div>;\n};\n\nexport default SearchBox;\n","import { Row } from '../grid';\nexport default Row;","import React from 'react';\nimport { Form, Modal, Select, Input, Spin } from 'antd';\nimport { connect } from 'react-redux';\n\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 12 },\n};\n\nclass ClusterEditModal extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'application/fetchApplicationList' });\n  }\n\n  render() {\n    const { form, clusterState, applicationState } = this.props;\n    const { clusterVis, cluster } = clusterState;\n    const { applicationList, applicationListLoading } = applicationState;\n    const { getFieldDecorator } = form;\n\n    return (\n      <>\n        <Modal\n          visible={clusterVis.editVis}\n          onCancel={this.handleClose}\n          onOk={this.handleAddCluster}\n        >\n          <Spin spinning={applicationListLoading}>\n            <Form>\n              <Form.Item label=\"项目\" {...formItemLayout}>\n                {getFieldDecorator('applicationId', { initialValue: cluster?.applicationId })(\n                  <Select>\n                    {applicationList.map((app) => (\n                      <Select.Option key={app.id} value={app.id}>\n                        {app.applicationName}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n              <Form.Item label=\"集群名称\" {...formItemLayout}>\n                {getFieldDecorator('clusterName', { initialValue: cluster?.clusterName })(\n                  <Input />\n                )}\n              </Form.Item>\n              <Form.Item label=\"描述\" {...formItemLayout}>\n                {getFieldDecorator('description', { initialValue: cluster?.description })(\n                  <Input.TextArea rows={3} />\n                )}\n              </Form.Item>\n            </Form>\n          </Spin>\n        </Modal>\n      </>\n    );\n  }\n\n  handleClose = () => {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'cluster/setClusterVis', payload: { editVis: false, cluster: null } });\n  };\n\n  handleAddCluster = () => {\n    const { dispatch, form } = this.props;\n\n    form.validateFields((err, values) => {\n      if (!err) {\n        dispatch({ type: 'cluster/fetchEditCluster', payload: { data: values } });\n      }\n    });\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  clusterState: state.clusterState,\n  applicationState: state.applicationState,\n});\n\nexport default connect(mapStateToProps)(Form.create()(ClusterEditModal));\n","/*\n * @Author: zhenglfsir@gmail.com\n * @Date: 2019-01-03 22:17:38\n * @Last Modified by: zhenglfsir@gmail.com\n * @Last Modified time: 2019-04-10 15:37:54\n * 集群配置\n */\n\nimport React from 'react';\nimport BlankContent from 'src/layouts/BlankContent';\nimport SearchBox from 'components/UI/SearchBox';\nimport { Row, Col, Input, Button, Table, Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport ClusterEditModal from './ClusterEditModal';\n\nclass ClusterConfiguration extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'cluster/fetchClusterList' });\n  }\n\n  render() {\n    const { clusterState } = this.props;\n    const { clusterList, clusterLoading, clusterName } = clusterState;\n\n    return (\n      <>\n        <BlankContent>\n          <SearchBox>\n            <Row>\n              <Col span={12}>\n                <Input\n                  value={clusterName}\n                  placeholder=\"项目名称\"\n                  style={{ width: 200 }}\n                  onChange={this.handleChange}\n                  onPressEnter={this.handleSearch}\n                />\n                <Button type=\"primary\" style={{ marginLeft: 10 }} onClick={this.handleSearch}>\n                  搜索\n                </Button>\n              </Col>\n              <Col span={12} align=\"right\">\n                <Button onClick={this.handleToAdd}>新增</Button>\n              </Col>\n            </Row>\n          </SearchBox>\n          <Table\n            size=\"middle\"\n            dataSource={clusterList}\n            loading={clusterLoading}\n            columns={this.getColumns()}\n          />\n        </BlankContent>\n        <ClusterEditModal />\n      </>\n    );\n  }\n\n  getColumns = () => {\n    return [\n      { title: '集群名称', dataIndex: 'clusterName' },\n      { title: '集群标识码', dataIndex: 'clusterCode' },\n      { title: '描述', dataIndex: 'description' },\n      { title: '创建时间', dataIndex: 'createTime' },\n      {\n        title: '操作',\n        dataIndex: 'btn',\n        render: (txt, record) => (\n          <>\n            <a onClick={this.handleToEdit(record)}>编辑</a>\n            <a onClick={this.handleDelete(record)}>删除</a>\n          </>\n        ),\n      },\n    ];\n  };\n\n  handleDelete = (record) => () => {\n    Modal.confirm({\n      title: `确认删除 ${record.clusterName}?`,\n      onOk: async () => {\n        const { dispatch } = this.props;\n        await dispatch({ type: 'cluster/fetchDeleteCluster', payload: { id: record.id } });\n      },\n    });\n  };\n\n  handleToEdit = (record) => () => {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'cluster/setState', payload: { cluster: { ...record } } });\n    dispatch({ type: 'cluster/setClusterVis', payload: { editVis: true } });\n  };\n\n  handleToAdd = () => {\n    const { dispatch } = this.props;\n\n    dispatch({ type: 'cluster/setClusterVis', payload: { editVis: true } });\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  clusterState: state.clusterState,\n});\n\nexport default connect(mapStateToProps)(ClusterConfiguration);\n","import React from 'react';\nimport styles from './layouts.scss';\n\nexport default function BlankContent(props) {\n  return <div className={styles['blank-content']}>{props.children}</div>;\n}\n","import '../../style/index.less';\nimport '../../grid/style/index.less';","import { Col } from '../grid';\nexport default Col;"],"sourceRoot":""}